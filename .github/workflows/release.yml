name: Create Release

on:
  push:
    tags:
      - 'v*' # Trigger on tags like v1.0, v1.1.0, etc.

jobs:
  build:
    name: Build for ${{ matrix.os }} (${{ matrix.arch }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            arch: x64
          - os: ubuntu-latest
            arch: arm64
          - os: windows-latest
            arch: x64
          - os: macos-latest
            arch: x64
          - os: macos-latest
            arch: arm64

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install uv
        run: curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: Add uv to PATH
        run: echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: uv sync --all-extras

      - name: Build with PyInstaller
        run: uv run pyinstaller main.py --onefile --name drama-catch-up-${{ matrix.os }}-${{ matrix.arch }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: drama-catch-up-${{ matrix.os }}-${{ matrix.arch }}
          path: dist/*

  create-release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write # Required to create a release

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/
      
      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/*/*
          # This will use the tag name as the release name
          # and auto-generate release notes from commit messages.
